!function(e) {
    "use strict";
    function t(e) {
        this.containerSelector = e, this.container = document.querySelector(this.containerSelector);
    }
    function n(e) {
        e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.webkitRequestFullscreen && e.webkitRequestFullScreen();
    }
    function o() {
        document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();
    }
    function a() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div");
        return e.id = "BPlayer-volumeControler", t.id = "BPlayer-volumeBtn", n.id = "BPlayer-volumeBar-container", 
        o.id = "BPlayer-volumeBar", t.className = "BPlayer-Btn", t.innerHTML = "<i class='iconfont icon-volumeup' id='BPlayer-volumeMark'></i>", 
        o.innerHTML = "<div id='BPlayer-volumeBar-inner'>                                    <span id='BPlayer-volume-thumb' class='BPlayer-thumb'></span>                                <div>", 
        n.appendChild(o), e.appendChild(t), e.appendChild(n), e;
    }
    function l() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div");
        return e.id = "BPlayer-playBar-container", t.id = "BPlayer-playBar", n.id = "BPlayer-playBar-loaded", 
        o.id = "BPlayer-playBar-played", o.innerHTML = "<span id='BPlayer-play-thumb' class='BPlayer-thumb'></span>", 
        t.appendChild(n), t.appendChild(o), e.appendChild(t), e;
    }
    function r() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div"), a = [ "#FFF", "#000", "#CB1B45", "#A5DEE4", "#F05E1C", "#86C166", "#FFC408", "#8F77B5" ];
        e.id = "BPlayer-danmuku-styleMenu", t.id = "BPlayer-danmuku-ColorMenu", n.id = "BPlayer-danmuku-PositionMenu", 
        o.id = "BPlayer-danmuku-OpacityMenu", n.innerHTML = "<span>弹幕模式</span>                                        <label>                                            <input type='radio' value='top' name='BPlayer-danmuku-Position' class='hidden-input BPlayer-danmuku-Position' />                                            <span>顶端</span>                                        </label>                                        <label>                                            <input type='radio' value='scroll' name='BPlayer-danmuku-Position' checked class='hidden-input BPlayer-danmuku-Position' />                                            <span>滚动</span>                                        </label>                                        <label>                                            <input type='radio' value='bottom' name='BPlayer-danmuku-Position' class='hidden-input BPlayer-danmuku-Position' />                                            <span>底端</span>                                        </label>", 
        t.innerHTML = "<span>弹幕颜色</span>", t.innerHTML += "<label>                                                <input type='radio' value=" + a[0] + " name='BPlayer-danmuku-Color' class='hidden-input BPlayer-danmuku-Color' checked/>                                                <span style='background-color:" + a[0] + "' ></span>                                            </label>";
        for (var l = 0, r = a.length - 1; r > l; l++) t.innerHTML += "<label>                                                <input type='radio' value=" + a[l + 1] + " name='BPlayer-danmuku-Color' class='hidden-input BPlayer-danmuku-Color'/>                                                <span style='background-color:" + a[l + 1] + "' ></span>                                            </label>";
        return o.innerHTML = "<span>弹幕透明度</span>                                        <div id='BPlayer-danmuku-opacity'>                                            <div id='BPlayer-danmuku-opacity-chosen'>                                                <span id='BPlayer-danmuku-opacity-thumb' class='BPlayer-thumb'></span>                                            </div>                                        </div>", 
        e.appendChild(n), e.appendChild(t), e.appendChild(o), e;
    }
    function u(e) {
        function t(e) {
            return 10 > e && (e = "0" + e), e;
        }
        var n = parseInt(e / 60);
        return e = parseInt(e - 60 * n), t(n) + ":" + t(e);
    }
    function i() {
        var e = document.querySelector("#BPlayer-playMark"), t = document.querySelector("#BPlayer-video");
        t.paused ? (t.play(), e.className = "iconfont icon-pause") : (t.pause(), e.className = "iconfont icon-playarrow");
    }
    function d(e) {
        var t = document.createElement("div");
        return t.className = "BPlayer-danmuku-items", t.innerHTML = e.content, t.style.color = e.color, 
        t.height = 26, t;
    }
    var c = {
        width: "",
        height: "",
        fullscreenState: "",
        bulletState: "",
        video: "",
        volume: ""
    }, s = {
        position: "scroll",
        color: "#FFF",
        content: "",
        scrollY: 0,
        topY: 0,
        bottomY: 0
    };
    t.prototype.setVideo = function(e, t, n) {
        this.container.style.height = "";
        var o = n || {};
        c.fullscreenState = !1, c.bulletState = o.bulletState || !0, c.volume = o.volume || .5, 
        c.video = e, c.poster = t, this.addVideo(e, t), this.addControler(), this.initPlayState(), 
        this.initVolumeState(), this.addDanmukuControler(), this.keyBoardEvent();
    }, t.prototype.addVideo = function(e, t) {
        document.querySelector("#BPlayer") && document.querySelector("#BPlayer").remove();
        var n = document.createElement("VIDEO"), o = document.createElement("div"), a = document.createElement("div");
        a.id = "BPlayer", n.id = "BPlayer-video", o.id = "BPlayer-danmukuArea", n.poster = t, 
        n.innerHTML = "<source src='" + e + "'>", n.style.height = this.container.offsetHeigh + "px", 
        a.appendChild(n), a.appendChild(o), this.container.appendChild(a);
    }, t.prototype.addControler = function() {
        var e = document.createElement("div"), t = document.createElement("div"), r = document.createElement("div"), u = document.createElement("div"), i = document.createElement("div"), d = a(), c = l(), s = document.createElement("div"), m = document.querySelector("#BPlayer");
        e.id = "BPlayer-controler", t.id = "BPlayer-playBtn", r.id = "BPlayer-fullscreenBtn", 
        u.id = "BPlayer-timer", i.id = "BPlayer-loopBtn", s.id = "BPlayer-danmukuBtn", t.className = "BPlayer-Btn", 
        r.className = "BPlayer-Btn", i.className = "BPlayer-Btn", s.className = "BPlayer-Btn", 
        t.innerHTML = "<i class='iconfont icon-playarrow' id='BPlayer-playMark'></i>", r.innerHTML = "<i class='iconfont icon-fullscreen' id='BPlayer-fullscreenMark'></i>", 
        i.innerHTML = "<i class='iconfont icon-loop' id='BPlayer-loopMark'></i>", s.innerHTML = "<i class='iconfont icon-icon' id='BPlayer-loopMark'></i>", 
        u.innerHTML = "<span id='BPlayer-timer-played'>00:00</span>/<span id='BPlayer-timer-length'>00:00</span>", 
        r.onclick = function() {
            var e = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            e ? o() : n(m);
        }, s.onclick = function() {
            var e = document.querySelector("#BPlayer-danmuku-controler"), t = document.querySelector("#BPlayer-danmuku-styleMenu"), n = document.querySelector("#BPlayer-danmuku-input");
            document.querySelector(".BPlayer-danmuku-controler-hide") ? (e.className = "BPlayer-danmuku-controler-show", 
            setTimeout(function() {
                n.focus();
            }, 300)) : (n.blur(), e.className = "BPlayer-danmuku-controler-hide", "BPlayer-danmuku-styleMenu-show" === t.className && (t.className = "BPlayer-danmuku-styleMenu-hide"));
        }, e.appendChild(t), e.appendChild(d), e.appendChild(u), e.appendChild(r), e.appendChild(i), 
        e.appendChild(s), e.appendChild(c), m.appendChild(e);
    }, t.prototype.initPlayState = function() {
        function e() {
            var e = event.clientX - 20, t = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            t ? e = e : e -= f.offsetLeft, e > c.offsetWidth && (e = c.offsetWidth), y.style.left = e + "px", 
            m.style.width = e + "px", l.currentTime = l.duration * e / c.offsetWidth;
        }
        function t() {
            clearTimeout(a), p.className = "BPlayer-controler-hide";
        }
        function n() {
            clearTimeout(a), p.className = "";
        }
        function o() {
            clearTimeout(a), n(), a = setTimeout(t, 4e3);
        }
        var a, l = document.querySelector("#BPlayer-video"), r = document.querySelector("#BPlayer-playBtn"), d = document.querySelector("#BPlayer-timer-played"), c = document.querySelector("#BPlayer-playBar"), s = document.querySelector("#BPlayer-playBar-loaded"), m = document.querySelector("#BPlayer-playBar-played"), y = document.querySelector("#BPlayer-play-thumb"), p = document.querySelector("#BPlayer-controler"), v = document.querySelector("#BPlayer-loopBtn"), f = document.querySelector("#BPlayer");
        l.addEventListener("canplaythrough", function() {
            var e = document.querySelector("#BPlayer-timer-length");
            e.innerHTML = u(l.duration);
        }), l.addEventListener("progress", function() {
            if (4 === l.readyState) {
                var e = l.buffered.end(0);
                s.style.width = e / l.duration * 100 + "%";
            }
        }), l.addEventListener("play", function() {
            setInterval(function() {
                d.innerHTML = u(l.currentTime), m.style.width = l.currentTime / l.duration * 100 + "%", 
                y.style.left = m.offsetWidth - 4 + "px";
            }, 250);
        }), l.addEventListener("click", i), r.addEventListener("click", i), c.addEventListener("click", e), 
        y.addEventListener("mousedown", function() {
            document.addEventListener("mousemove", e), document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        }), l.addEventListener("playing", function() {
            setTimeout(t, 4e3), f.addEventListener("mousemove", o), f.addEventListener("mouseout", t);
        }), l.addEventListener("pause", function() {
            n(), f.removeEventListener("mouseout", t);
        }), v.addEventListener("click", function() {
            l.loop ? (l.loop = !1, v.style.color = "#BBB") : (l.loop = "loop", v.style.color = "#AB3B3A");
        });
    }, t.prototype.initVolumeState = function() {
        function e() {
            var e = event.clientX - 125, n = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            n ? e = e : e -= o.offsetLeft, e > l.offsetWidth && (e = l.offsetWidth), u.style.left = e + "px", 
            r.style.width = e / l.offsetWidth * 100 + "%", t.volume = e / l.offsetWidth, c.volume = e / l.offsetWidth;
        }
        var t = document.querySelector("#BPlayer-video"), n = document.querySelector("#BPlayer-controler"), o = document.querySelector("#BPlayer"), a = document.querySelector("#BPlayer-volumeBtn"), l = document.querySelector("#BPlayer-volumeBar"), r = document.querySelector("#BPlayer-volumeBar-inner"), u = document.querySelector("#BPlayer-volume-thumb");
        t.volume = c.volume, r.style.width = 100 * c.volume + "%", u.style.left = "100%", 
        a.addEventListener("click", function() {
            0 !== t.volume ? (t.volume = 0, r.style.width = "0%", u.style.left = 0, a.children[0].className = "iconfont icon-volumeoff") : (t.volume = c.volume, 
            r.style.width = 100 * t.volume + "%", u.style.left = l.offsetWidth * t.volume + "px", 
            a.children[0].className = "iconfont icon-volumeup");
        }), l.addEventListener("click", e), u.addEventListener("mousedown", function() {
            n.style.transform = "translateY(0%)", document.addEventListener("mousemove", e), 
            document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        });
    }, t.prototype.addDanmukuControler = function() {
        function e() {
            var e = event.clientX - 300 - u.offsetLeft;
            e > d.offsetWidth && (e = d.offsetWidth), i.style.width = e + "px";
        }
        var t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("input"), a = document.createElement("div"), l = r(), u = document.querySelector("#BPlayer");
        t.id = "BPlayer-danmuku-controler", n.id = "BPlayer-danmuku-style", o.id = "BPlayer-danmuku-input", 
        a.id = "BPlayer-danmuku-shooter", t.className = "BPlayer-danmuku-controler-hide", 
        l.className = "BPlayer-danmuku-styleMenu-hide", n.innerHTML = "<i class='iconfont icon-settings' id='BPlayer-danmukuStyleMark'></i>", 
        a.innerHTML = "<i class='iconfont icon-send' id='BPlayer-danmukuShooterMark'></i>", 
        o.type = "text", o.placeholder = "输入弹幕，回车发送", t.appendChild(n), t.appendChild(o), 
        t.appendChild(a), t.appendChild(l), u.appendChild(t);
        var i = document.querySelector("#BPlayer-danmuku-opacity-chosen"), d = document.querySelector("#BPlayer-danmuku-opacity"), c = document.querySelector("#BPlayer-danmuku-opacity-thumb");
        d.addEventListener("click", e), c.addEventListener("mousedown", function() {
            document.addEventListener("mousemove", e), document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        }), n.addEventListener("click", function() {
            "BPlayer-danmuku-styleMenu-hide" === l.className ? l.className = "BPlayer-danmuku-styleMenu-show" : l.className = "BPlayer-danmuku-styleMenu-hide";
        }), a.addEventListener("click", this.shootDanmuku.bind(this, s)), this.setDanmukuStyle();
    }, t.prototype.setDanmukuStyle = function() {
        var e = document.querySelector("#BPlayer-danmuku-PositionMenu"), t = document.querySelector("#BPlayer-danmuku-ColorMenu"), n = document.querySelector("#BPlayer-danmuku-style"), o = document.querySelector("#BPlayer-danmuku-opacity"), a = document.querySelector("#BPlayer-danmuku-opacity-chosen"), l = document.querySelector("#BPlayer-danmukuArea");
        l.style.opacity = a.offsetWidth / o.offsetWidth, e.addEventListener("click", function() {
            event.target.value && (s.position = event.target.value);
        }), t.addEventListener("click", function() {
            event.target.value && (s.color = event.target.value, n.style.color = event.target.value);
        }), o.addEventListener("click", function() {
            l.style.opacity = a.offsetWidth / o.offsetWidth;
        });
    }, t.prototype.shootDanmuku = function(e) {
        var t = document.querySelector("#BPlayer-video"), n = document.querySelector("#BPlayer-danmuku-input"), o = 10 * t.currentTime.toFixed(1), a = ref.child(o);
        if ("" !== n.value) if (e.content = n.value, n.value = "", t.paused) {
            var l = 1;
            t.addEventListener("play", function(e) {
                1 === l && (this.addDanmuku(e), a = ref.child(o), a.push({
                    content: e.content,
                    position: e.position,
                    color: e.color
                }), l = 0);
            }.bind(this, e));
        } else this.addDanmuku(e), a.push({
            content: e.content,
            position: e.position,
            color: e.color
        });
    }, t.prototype.addDanmuku = function(e) {
        "scroll" == e.position ? this.addDanmukuScroll(e) : "top" == e.position ? this.addDanmukuTop(e) : this.addDanmukuBottom(e);
    }, t.prototype.addDanmukuScroll = function(t) {
        function n() {
            c -= p, i.style.left = c + "px", c > -r ? u = requestAnimationFrame(n) : (e.cancelAnimationFrame(u), 
            m < s.scrollY && (s.scrollY = m), i.remove());
        }
        var o = document.querySelector("#BPlayer-danmukuArea"), a = document.querySelector("#BPlayer-video"), l = {};
        l.content = t.content, l.color = t.color, l.position = t.position, l.scrollY = s.scrollY;
        var r, u, i = d(l), c = o.offsetWidth, m = l.scrollY, y = i.height, p = c / 300;
        o.appendChild(i), r = i.offsetWidth, i.style.top = m + "px", i.style.left = c + "px", 
        m < o.offsetHeight - y ? s.scrollY += y : s.scrollY = 0, u = requestAnimationFrame(n), 
        a.addEventListener("pause", function() {
            e.cancelAnimationFrame(u), i.className = "BPlayer-danmuku-items BPlayer-danmuku-items-scroll BPlayer-danmuku-items-paused";
        }), a.addEventListener("play", function() {
            u = requestAnimationFrame(n), i.className = "BPlayer-danmuku-items BPlayer-danmuku-items-scroll";
        });
    }, t.prototype.addDanmukuTop = function(t) {
        function n() {
            300 > p ? (p++, i = requestAnimationFrame(n)) : (y < s.topY && (s.topY = y), e.cancelAnimationFrame(i), 
            c.remove());
        }
        var o = document.querySelector("#BPlayer-danmukuArea"), a = document.querySelector("#BPlayer-video"), l = {};
        l.content = t.content, l.color = t.color, l.position = t.position, l.topY = s.topY;
        var r, u, i, c = d(l), m = c.height, y = l.topY, p = 0;
        o.appendChild(c), r = c.offsetWidth, u = (o.offsetWidth - r) / 2, c.style.left = u + "px", 
        c.style.top = y + "px", y < o.offsetHeight - m ? s.topY += m : s.topY = 0, i = requestAnimationFrame(n), 
        a.addEventListener("pause", function() {
            e.cancelAnimationFrame(i);
        }), a.addEventListener("play", function() {
            i = requestAnimationFrame(n);
        });
    }, t.prototype.addDanmukuBottom = function(t) {
        function n() {
            300 > p ? (p++, i = requestAnimationFrame(n)) : (y < s.bottomY && (s.bottomY = y), 
            e.cancelAnimationFrame(i), c.remove());
        }
        var o = document.querySelector("#BPlayer-danmukuArea"), a = document.querySelector("#BPlayer-video"), l = {};
        l.content = t.content, l.color = t.color, l.position = t.position, l.bottomY = s.bottomY;
        var r, u, i, c = d(l), m = c.height, y = l.bottomY, p = 0;
        o.appendChild(c), r = c.offsetWidth, u = (o.offsetWidth - r) / 2, c.style.left = u + "px", 
        c.style.bottom = y + "px", y < o.offsetHeight - m ? s.bottomY += m : s.bottomY = 0, 
        i = requestAnimationFrame(n), a.addEventListener("pause", function() {
            e.cancelAnimationFrame(i);
        }), a.addEventListener("play", function() {
            i = requestAnimationFrame(stepTop);
        });
    }, t.prototype.keyBoardEvent = function() {
        var e = document.querySelector("#BPlayer-danmuku-input");
        e.addEventListener("keypress", function() {
            13 === event.keyCode && this.shootDanmuku(s);
        }.bind(this)), document.addEventListener("keydown", function() {
            var e = document.querySelector("#BPlayer-video"), t = document.querySelector("#BPlayer-volumeBar-inner");
            switch (event.keyCode) {
              case 9:
                event.preventDefault();
                break;

              case 39:
                e.currentTime += 10;
                break;

              case 37:
                e.currentTime -= 10;
                break;

              case 38:
                e.volume += .1, t.style.width = 100 * e.volume + "%";
                break;

              case 40:
                e.volume -= .1, t.style.width = 100 * e.volume + "%";
                break;

              case 32:
                i();
            }
        });
    }, void 0 === e.BulletPlayer && (e.BulletPlayer = function(e) {
        return new t(e);
    });
}(window);