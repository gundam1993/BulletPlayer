!function(e) {
    "use strict";
    function t(e) {
        this.containerSelector = e, this.container = document.querySelector(this.containerSelector), 
        this.danmukuList = [];
    }
    function n(e) {
        this.position = e.position || "scroll", this.color = e.color || "#FFF", this.content = e.content || "", 
        this.cvs = s(e), this.timer = 0;
    }
    function o(e) {
        e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.webkitRequestFullscreen && e.webkitRequestFullScreen();
    }
    function i() {
        document.exitFullscreen ? document.exitFullscreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();
    }
    function a() {
        var e = document.querySelector("#BPlayer-danmukuArea");
        setTimeout(function() {
            e.width = e.offsetWidth, e.height = e.offsetHeight;
        }, 100);
    }
    function l() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div");
        return e.id = "BPlayer-volumeControler", t.id = "BPlayer-volumeBtn", n.id = "BPlayer-volumeBar-container", 
        o.id = "BPlayer-volumeBar", t.className = "BPlayer-Btn", t.innerHTML = "<i class='iconfont icon-volumeup' id='BPlayer-volumeMark'></i>", 
        o.innerHTML = "<div id='BPlayer-volumeBar-inner'>                                    <span id='BPlayer-volume-thumb' class='BPlayer-thumb'></span>                                <div>", 
        n.appendChild(o), e.appendChild(t), e.appendChild(n), e;
    }
    function r() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div");
        return e.id = "BPlayer-playBar-container", t.id = "BPlayer-playBar", n.id = "BPlayer-playBar-loaded", 
        o.id = "BPlayer-playBar-played", o.innerHTML = "<span id='BPlayer-play-thumb' class='BPlayer-thumb'></span>", 
        t.appendChild(n), t.appendChild(o), e.appendChild(t), e;
    }
    function u() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("div"), i = [ "#FFF", "#000", "#CB1B45", "#A5DEE4", "#F05E1C", "#86C166", "#FFC408", "#8F77B5" ];
        e.id = "BPlayer-danmuku-styleMenu", t.id = "BPlayer-danmuku-ColorMenu", n.id = "BPlayer-danmuku-PositionMenu", 
        o.id = "BPlayer-danmuku-OpacityMenu", n.innerHTML = "<span>弹幕模式</span>                                        <label>                                            <input type='radio' value='top' name='BPlayer-danmuku-Position' class='hidden-input BPlayer-danmuku-Position' />                                            <span>顶端</span>                                        </label>                                        <label>                                            <input type='radio' value='scroll' name='BPlayer-danmuku-Position' checked class='hidden-input BPlayer-danmuku-Position' />                                            <span>滚动</span>                                        </label>                                        <label>                                            <input type='radio' value='bottom' name='BPlayer-danmuku-Position' class='hidden-input BPlayer-danmuku-Position' />                                            <span>底端</span>                                        </label>", 
        t.innerHTML = "<span>弹幕颜色</span>", t.innerHTML += "<label>                                                <input type='radio' value=" + i[0] + " name='BPlayer-danmuku-Color' class='hidden-input BPlayer-danmuku-Color' checked/>                                                <span style='background-color:" + i[0] + "' ></span>                                            </label>";
        for (var a = 0, l = i.length - 1; l > a; a++) t.innerHTML += "<label>                                                <input type='radio' value=" + i[a + 1] + " name='BPlayer-danmuku-Color' class='hidden-input BPlayer-danmuku-Color'/>                                                <span style='background-color:" + i[a + 1] + "' ></span>                                            </label>";
        return o.innerHTML = "<span>弹幕透明度</span>                                        <div id='BPlayer-danmuku-opacity'>                                            <div id='BPlayer-danmuku-opacity-chosen'>                                                <span id='BPlayer-danmuku-opacity-thumb' class='BPlayer-thumb'></span>                                            </div>                                        </div>", 
        e.appendChild(n), e.appendChild(t), e.appendChild(o), e;
    }
    function d(e) {
        function t(e) {
            return 10 > e && (e = "0" + e), e;
        }
        var n = parseInt(e / 60);
        return e = parseInt(e - 60 * n), t(n) + ":" + t(e);
    }
    function c() {
        var e = document.querySelector("#BPlayer-playMark"), t = document.querySelector("#BPlayer-video");
        t.paused ? (t.play(), e.className = "iconfont icon-pause") : (t.pause(), e.className = "iconfont icon-playarrow");
    }
    function s(e) {
        var t = document.createElement("canvas"), n = t.getContext("2d");
        return n.font = "23px Arial bold", t.width = n.measureText(e.content).width, t.height = 30, 
        n.textAlign = "start", n.textBaseline = "top", n.fillStyle = "#fff", n.fillStyle = e.color, 
        n.font = "23px Arial bold", n.fillText(e.content, 0, 0), t;
    }
    function m(e) {
        var t = document.querySelector("#BPlayer-danmukuArea");
        "scroll" === e.position ? (e.positionY = h.scrollY, e.positionX = t.width, h.scrollY < t.height - e.cvs.height ? h.scrollY += e.cvs.height : h.scrollY = 0) : "top" === e.position ? (e.positionX = (t.width - e.cvs.width) / 2, 
        e.positionY = h.topY, h.topY < t.height - e.cvs.height ? h.topY += e.cvs.height : h.topY = 0) : (e.positionY = t.height - h.bottomY - e.cvs.height, 
        e.positionX = (t.width - e.cvs.width) / 2, h.bottomY < t.height - 2 * e.cvs.height ? h.bottomY += e.cvs.height : h.bottomY = 0);
    }
    var y, p = {
        width: "",
        height: "",
        fullscreenState: "",
        bulletState: "",
        video: "",
        volume: ""
    }, h = {
        position: "scroll",
        color: "#FFF",
        scrollY: 0,
        topY: 0,
        bottomY: 0
    };
    t.prototype.setVideo = function(e, t, n) {
        this.container.style.height = "";
        var o = n || {};
        p.fullscreenState = !1, p.bulletState = o.bulletState || !0, p.volume = o.volume || .5, 
        p.video = e, p.poster = t, this.addVideo(e, t), this.addControler(), this.initPlayState(), 
        this.initVolumeState(), this.addDanmukuControler(), this.keyBoardEvent(), this.danmukuControl();
    }, t.prototype.addVideo = function(e, t) {
        document.querySelector("#BPlayer") && document.querySelector("#BPlayer").remove();
        var n = document.createElement("VIDEO"), o = document.createElement("div");
        o.id = "BPlayer", n.id = "BPlayer-video";
        var i = "<canvas id='BPlayer-danmukuArea' style='opacity: 0.75;'></canvas>";
        n.poster = t, n.innerHTML = "<source src='" + e + "'>", n.style.height = this.container.offsetHeigh + "px", 
        o.appendChild(n), o.innerHTML += i, this.container.appendChild(o), i = document.querySelector("#BPlayer-danmukuArea"), 
        n.addEventListener("canplay", function() {
            i.width = i.offsetWidth, i.height = n.videoHeight / n.videoWidth * i.offsetWidth;
        });
    }, t.prototype.addControler = function() {
        var e = document.createElement("div"), t = document.createElement("div"), n = document.createElement("div"), u = document.createElement("div"), d = document.createElement("div"), c = l(), s = r(), m = document.createElement("div"), y = document.querySelector("#BPlayer");
        e.id = "BPlayer-controler", t.id = "BPlayer-playBtn", n.id = "BPlayer-fullscreenBtn", 
        u.id = "BPlayer-timer", d.id = "BPlayer-loopBtn", m.id = "BPlayer-danmukuBtn", t.className = "BPlayer-Btn", 
        n.className = "BPlayer-Btn", d.className = "BPlayer-Btn", m.className = "BPlayer-Btn", 
        t.innerHTML = "<i class='iconfont icon-playarrow' id='BPlayer-playMark'></i>", n.innerHTML = "<i class='iconfont icon-fullscreen' id='BPlayer-fullscreenMark'></i>", 
        d.innerHTML = "<i class='iconfont icon-loop' id='BPlayer-loopMark'></i>", m.innerHTML = "<i class='iconfont icon-icon' id='BPlayer-loopMark'></i>", 
        u.innerHTML = "<span id='BPlayer-timer-played'>00:00</span>/<span id='BPlayer-timer-length'>00:00</span>", 
        n.onclick = function() {
            var e = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            e ? i() : o(y);
        }, document.addEventListener("fullscreenchange", a), document.addEventListener("webkitfullscreenchange", a), 
        document.addEventListener("mozfullscreenchange", a), m.onclick = function() {
            var e = document.querySelector("#BPlayer-danmuku-controler"), t = document.querySelector("#BPlayer-danmuku-styleMenu"), n = document.querySelector("#BPlayer-danmuku-input");
            document.querySelector(".BPlayer-danmuku-controler-hide") ? (e.className = "BPlayer-danmuku-controler-show", 
            setTimeout(function() {
                n.focus();
            }, 300)) : (n.blur(), e.className = "BPlayer-danmuku-controler-hide", "BPlayer-danmuku-styleMenu-show" === t.className && (t.className = "BPlayer-danmuku-styleMenu-hide"));
        }, e.appendChild(t), e.appendChild(c), e.appendChild(u), e.appendChild(n), e.appendChild(d), 
        e.appendChild(m), e.appendChild(s), y.appendChild(e);
    }, t.prototype.initPlayState = function() {
        function e() {
            var e = event.clientX - 20, t = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            t ? e = e : e -= v.offsetLeft, e > u.offsetWidth && (e = u.offsetWidth), y.style.left = e + "px", 
            m.style.width = e + "px", a.currentTime = a.duration * e / u.offsetWidth;
        }
        function t() {
            clearTimeout(i), p.className = "BPlayer-controler-hide";
        }
        function n() {
            clearTimeout(i), p.className = "";
        }
        function o() {
            clearTimeout(i), n(), i = setTimeout(t, 4e3);
        }
        var i, a = document.querySelector("#BPlayer-video"), l = document.querySelector("#BPlayer-playBtn"), r = document.querySelector("#BPlayer-timer-played"), u = document.querySelector("#BPlayer-playBar"), s = document.querySelector("#BPlayer-playBar-loaded"), m = document.querySelector("#BPlayer-playBar-played"), y = document.querySelector("#BPlayer-play-thumb"), p = document.querySelector("#BPlayer-controler"), h = document.querySelector("#BPlayer-loopBtn"), v = document.querySelector("#BPlayer"), f = document.querySelector("#BPlayer-danmukuArea");
        a.addEventListener("canplaythrough", function() {
            var e = document.querySelector("#BPlayer-timer-length");
            e.innerHTML = d(a.duration), f.width = v.offsetWidth, f.height = v.offsetHeight;
        }), a.addEventListener("progress", function() {
            if (4 === a.readyState) {
                var e = a.buffered.end(0);
                s.style.width = e / a.duration * 100 + "%";
            }
        }), a.addEventListener("play", function() {
            setInterval(function() {
                r.innerHTML = d(a.currentTime), m.style.width = a.currentTime / a.duration * 100 + "%", 
                y.style.left = m.offsetWidth - 4 + "px";
            }, 250);
        }), a.addEventListener("click", c), l.addEventListener("click", c), u.addEventListener("click", e), 
        y.addEventListener("mousedown", function() {
            document.addEventListener("mousemove", e), document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        }), a.addEventListener("playing", function() {
            setTimeout(t, 4e3), v.addEventListener("mousemove", o), v.addEventListener("mouseout", t);
        }), a.addEventListener("pause", function() {
            n(), v.removeEventListener("mouseout", t);
        }), h.addEventListener("click", function() {
            a.loop ? (a.loop = !1, h.style.color = "#BBB") : (a.loop = "loop", h.style.color = "#AB3B3A");
        });
    }, t.prototype.initVolumeState = function() {
        function e() {
            var e = event.clientX - 125, n = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
            n ? e = e : e -= o.offsetLeft, e > a.offsetWidth && (e = a.offsetWidth), r.style.left = e + "px", 
            l.style.width = e / a.offsetWidth * 100 + "%", t.volume = e / a.offsetWidth, p.volume = e / a.offsetWidth;
        }
        var t = document.querySelector("#BPlayer-video"), n = document.querySelector("#BPlayer-controler"), o = document.querySelector("#BPlayer"), i = document.querySelector("#BPlayer-volumeBtn"), a = document.querySelector("#BPlayer-volumeBar"), l = document.querySelector("#BPlayer-volumeBar-inner"), r = document.querySelector("#BPlayer-volume-thumb");
        t.volume = p.volume, l.style.width = 100 * p.volume + "%", r.style.left = "100%", 
        i.addEventListener("click", function() {
            0 !== t.volume ? (t.volume = 0, l.style.width = "0%", r.style.left = 0, i.children[0].className = "iconfont icon-volumeoff") : (t.volume = p.volume, 
            l.style.width = 100 * t.volume + "%", r.style.left = a.offsetWidth * t.volume + "px", 
            i.children[0].className = "iconfont icon-volumeup");
        }), a.addEventListener("click", e), r.addEventListener("mousedown", function() {
            n.style.transform = "translateY(0%)", document.addEventListener("mousemove", e), 
            document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        });
    }, t.prototype.addDanmukuControler = function() {
        function e() {
            var e = event.clientX - 300 - l.offsetLeft;
            e > d.offsetWidth && (e = d.offsetWidth), r.style.width = e + "px";
        }
        var t = document.createElement("div"), n = document.createElement("div"), o = document.createElement("input"), i = document.createElement("div"), a = u(), l = document.querySelector("#BPlayer");
        t.id = "BPlayer-danmuku-controler", n.id = "BPlayer-danmuku-style", o.id = "BPlayer-danmuku-input", 
        i.id = "BPlayer-danmuku-shooter", t.className = "BPlayer-danmuku-controler-hide", 
        a.className = "BPlayer-danmuku-styleMenu-hide", n.innerHTML = "<i class='iconfont icon-settings' id='BPlayer-danmukuStyleMark'></i>", 
        i.innerHTML = "<i class='iconfont icon-send' id='BPlayer-danmukuShooterMark'></i>", 
        o.type = "text", o.placeholder = "输入弹幕，回车发送", t.appendChild(n), t.appendChild(o), 
        t.appendChild(i), t.appendChild(a), l.appendChild(t);
        var r = document.querySelector("#BPlayer-danmuku-opacity-chosen"), d = document.querySelector("#BPlayer-danmuku-opacity"), c = document.querySelector("#BPlayer-danmuku-opacity-thumb");
        d.addEventListener("click", e), c.addEventListener("mousedown", function() {
            document.addEventListener("mousemove", e), document.addEventListener("mouseup", function() {
                document.removeEventListener("mousemove", e);
            });
        }), n.addEventListener("click", function() {
            "BPlayer-danmuku-styleMenu-hide" === a.className ? a.className = "BPlayer-danmuku-styleMenu-show" : a.className = "BPlayer-danmuku-styleMenu-hide";
        }), i.addEventListener("click", this.shootDanmuku.bind(this, h)), this.setDanmukuStyle();
    }, t.prototype.setDanmukuStyle = function() {
        var e = document.querySelector("#BPlayer-danmuku-PositionMenu"), t = document.querySelector("#BPlayer-danmuku-ColorMenu"), n = document.querySelector("#BPlayer-danmuku-style"), o = document.querySelector("#BPlayer-danmuku-opacity"), i = document.querySelector("#BPlayer-danmuku-opacity-chosen"), a = document.querySelector("#BPlayer-danmukuArea");
        a.style.opacity = i.offsetWidth / o.offsetWidth, e.addEventListener("click", function() {
            event.target.value && (h.position = event.target.value);
        }), t.addEventListener("click", function() {
            event.target.value && (h.color = event.target.value, n.style.color = event.target.value);
        }), o.addEventListener("click", function() {
            a.style.opacity = i.offsetWidth / o.offsetWidth;
        });
    }, t.prototype.shootDanmuku = function(e) {
        var t = document.querySelector("#BPlayer-video"), o = document.querySelector("#BPlayer-danmukuArea"), i = document.querySelector("#BPlayer-danmuku-input"), a = 10 * t.currentTime.toFixed(1), l = ref.child(a);
        if ("" !== i.value) {
            e.content = i.value;
            var r = new n(e);
            i.value = "", m(r), r.speed = (o.width + r.cvs.width) / 360, r.timer = 0, this.danmukuList.push(r), 
            l.push({
                content: e.content,
                position: e.position,
                color: e.color
            });
        }
    }, t.prototype.loadDanmuku = function(e) {
        var t = document.querySelector("#BPlayer-danmukuArea"), o = new n(e);
        m(o), o.speed = (t.width + o.cvs.width) / 360, o.timer = 0, this.danmukuList.push(o);
    }, t.prototype.drawDanmuku = function() {
        var e = document.querySelector("#BPlayer-danmukuArea"), t = e.getContext("2d");
        t.clearRect(0, 0, e.width, e.height);
        for (var n = 0; n < this.danmukuList.length; n++) t.drawImage(this.danmukuList[n].cvs, this.danmukuList[n].positionX, this.danmukuList[n].positionY, this.danmukuList[n].cvs.width, this.danmukuList[n].cvs.height), 
        this.danmukuList[n].timer++, "scroll" === this.danmukuList[n].position && (this.danmukuList[n].positionX -= this.danmukuList[n].speed), 
        this.danmukuList[n].timer > 360 && ("scroll" === this.danmukuList[n].position ? h.scrollY > this.danmukuList[n].positionY && (h.scrollY = this.danmukuList[n].positionY) : "top" === this.danmukuList[n].position ? h.topY > this.danmukuList[n].positionY && (h.topY = this.danmukuList[n].positionY) : h.bottomY > this.danmukuList[n].positionY && (h.bottomY = this.danmukuList[n].positionY), 
        this.danmukuList.splice(n, 1),n--);
        y = requestAnimationFrame(this.drawDanmuku.bind(this));
    }, t.prototype.danmukuControl = function() {
        var t = document.querySelector("#BPlayer-video");
        t.addEventListener("pause", function() {
            e.cancelAnimationFrame(y);
        }), t.addEventListener("play", function() {
            y = requestAnimationFrame(this.drawDanmuku.bind(this));
        }.bind(this));
    }, t.prototype.keyBoardEvent = function() {
        var e = document.querySelector("#BPlayer-danmuku-input");
        e.addEventListener("keypress", function() {
            13 === event.keyCode && this.shootDanmuku(h);
        }.bind(this)), document.addEventListener("keydown", function() {
            var e = document.querySelector("#BPlayer-video"), t = document.querySelector("#BPlayer-volumeBar-inner");
            switch (event.keyCode) {
              case 9:
                event.preventDefault();
                break;

              case 39:
                e.currentTime += 10;
                break;

              case 37:
                e.currentTime -= 10;
                break;

              case 38:
                e.volume += .1, t.style.width = 100 * e.volume + "%";
                break;

              case 40:
                e.volume -= .1, t.style.width = 100 * e.volume + "%";
                break;

              case 32:
                c();
            }
        });
    }, void 0 === e.BulletPlayer && (e.BulletPlayer = function(e) {
        return new t(e);
    });
}(window);